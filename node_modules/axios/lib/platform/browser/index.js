__webpack_require__.r(__webpack_exports__);
/* harmony export */
__webpack_require__.d(__webpack_exports__, {
    /* harmony export */
    "default": () => (__WEBPACK_DEFAULT_EXPORT__)
    /* harmony export */
});
/* harmony import */
var _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./classes/URLSearchParams.js */ "./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js");
/* harmony import */
var _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./classes/FormData.js */ "./node_modules/axios/lib/platform/browser/classes/FormData.js");



/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 *
 * @returns {boolean}
 */
const isStandardBrowserEnv = (() => {
    let product;
    if (typeof navigator !== 'undefined' && (
            (product = navigator.product) === 'ReactNative' ||
            product === 'NativeScript' ||
            product === 'NS')) {
        return false;
    }

    return typeof window !== 'undefined' && typeof document !== 'undefined';
})();

/* harmony default export */
const __WEBPACK_DEFAULT_EXPORT__ = ({
    isBrowser: true,
    classes: {
        URLSearchParams: _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__["default"],
        FormData: _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__["default"],
        Blob
    },
    isStandardBrowserEnv,
    protocols: ['http', 'https', 'file', 'blob', 'url', 'data']
});


//# sourceURL=webpack://timetics/./node_modules/axios/lib/platform/browser/index.js?