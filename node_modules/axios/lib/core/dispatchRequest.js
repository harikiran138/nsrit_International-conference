__webpack_require__.r(__webpack_exports__);
/* harmony export */
__webpack_require__.d(__webpack_exports__, {
    /* harmony export */
    "default": () => ( /* binding */ dispatchRequest)
    /* harmony export */
});
/* harmony import */
var _transformData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./transformData.js */ "./node_modules/axios/lib/core/transformData.js");
/* harmony import */
var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../cancel/isCancel.js */ "./node_modules/axios/lib/cancel/isCancel.js");
/* harmony import */
var _defaults_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../defaults/index.js */ "./node_modules/axios/lib/defaults/index.js");
/* harmony import */
var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../cancel/CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");
/* harmony import */
var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");








/**
 * Throws a `CanceledError` if cancellation has been requested.
 *
 * @param {Object} config The config that is to be used for the request
 *
 * @returns {void}
 */
function throwIfCancellationRequested(config) {
    if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
    }

    if (config.signal && config.signal.aborted) {
        throw new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_3__["default"]();
    }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 *
 * @returns {Promise} The Promise to be fulfilled
 */
function dispatchRequest(config) {
    throwIfCancellationRequested(config);

    config.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__["default"].from(config.headers);

    // Transform request data
    config.data = _transformData_js__WEBPACK_IMPORTED_MODULE_0__["default"].call(
        config,
        config.transformRequest
    );

    const adapter = config.adapter || _defaults_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].adapter;

    return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);

        // Transform response data
        response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_0__["default"].call(
            config,
            config.transformResponse,
            response
        );

        response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__["default"].from(response.headers);

        return response;
    }, function onAdapterRejection(reason) {
        if (!(0, _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_1__["default"])(reason)) {
            throwIfCancellationRequested(config);

            // Transform response data
            if (reason && reason.response) {
                reason.response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_0__["default"].call(
                    config,
                    config.transformResponse,
                    reason.response
                );
                reason.response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__["default"].from(reason.response.headers);
            }
        }

        return Promise.reject(reason);
    });
}


//# sourceURL=webpack://timetics/./node_modules/axios/lib/core/dispatchRequest.js?